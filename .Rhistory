DepA.table <- as.table(DepA)
DepA.table["Fourth",]/20
DepA <- matrix(c(2, 0, 9, 1, 5, 15, 4, 16), ncol=2, byrow = TRUE)
rownames(DepA) <- c("First", "Second", "Third", "Fourth")
colnames(DepA) <- c("Large", "Small")
DepA.table <- as.table(DepA)
DepA.table["First",]/2
DepA.table["Second",]/10
DepA.table["Third",]/20
DepA.table["Fourth",]/20
DepB <- matrix(c(18, 2, 40, 10, 4, 16, 2, 14), ncol=2, byrow = TRUE)
rownames(DepB) <- c("First", "Second", "Third", "Fourth")
colnames(DepB) <- c("Large", "Small")
DepB.table <- as.table(DepB)
DepB.table["First",]/20
DepB.table["Second",]/50
DepB.table["Third",]/20
DepB.table["Fourth",]/16
yfun <- function(t){
count = 602.8 - (74.7 * t)
}
decay <- read.csv("ex02-080decay.csv")
yfun <- function(t){
count = 602.8 - (74.7 * t)
}
decay <- read.csv("ex02-080decay.csv")
for x in decay$Time{
yfun <- function(t){
count = 602.8 - (74.7 * t)
}
decay <- read.csv("ex02-080decay.csv")
for( x in decay$Time){
print(yfun(x))
}
yfun <- function(t){
count = 602.8 - (74.7 * t)
}
decay <- read.csv("ex02-080decay.csv")
for( x in decay$Time){
print(x, yfun(x))
}
yfun <- function(t){
count = 602.8 - (74.7 * t)
}
decay <- read.csv("ex02-080decay.csv")
for (i in 1:length(decay$Time)){
print(i, yfun(i))
}
yfun <- function(t){
count = 602.8 - (74.7 * t)
}
decay <- read.csv("ex02-080decay.csv")
for (i in 1:length(decay$Time)){
print(i, yfun(decay[[i]]))
}
yfun <- function(t){
count = 602.8 - (74.7 * t)
}
decay <- read.csv("ex02-080decay.csv")
for(x in decay$Time){
print(, yfun(x))
}
yfun <- function(t){
count = 602.8 - (74.7 * t)
}
decay <- read.csv("ex02-080decay.csv")
for(x in decay$Time){
print(yfun(x))
}
decay %>%
residuals = (602.8-74.4* time)
decay %>%
residuals = (602.8 - Time))
decay %>%
residuals = (602.8 - Time)
decay
yfun <- function(t){
count = 602.8 - (74.7 * t)
}
decay <- read.csv("ex02-080decay.csv")
for(x in decay$Time){
print(yfun(x))
}
decay %>%
residuals = (602.8 - Time)
decay %>%
residuals = mutate(602.8 - Time)
decay %>%
mutate(602.8 - Time)
decay %>%
mutate(602.8 - (74.7 * Time))
decay <- decay %>%
Pred_Count = mutate(602.8 - (74.7 * Time))
decay %>%
Pred_Count = mutate(602.8 - (74.7 * Time))
decay %>%
Pred_Count = mutate(602.8 - 74.7 * Time)
decay %>%
Pred_Count = mutate(602.8 - (74.7 * Time))
yfun <- function(t){
count = 602.8 - (74.7 * t)
}
decay <- read.csv("ex02-080decay.csv")
for(x in decay$Time){
print(yfun(x))
}
decay %>%
Pred_Count = mutate(602.8 - (74.7 * Time))
decay %>%
Pred_Count = mutate(602.8 - (74.7 * Time))
decay %>%
Pred_Count = mutate(602.8 - (74.7 * Time))
decay %>%
mutate(602.8 - (74.7 * Time))
decay %>%
mutate(count_pred = (602.8 - (74.7 * Time)))
decay <- decay %>%
mutate(count_pred = (602.8 - (74.7 * Time)))
decay <- decay %>%
mutate(resids = (Count - count_pred))
yfun <- function(t){
count = 602.8 - (74.7 * t)
}
decay <- read.csv("ex02-080decay.csv")
for(x in decay$Time){
print(yfun(x))
}
decay <- decay %>%
mutate(count_pred = (602.8 - (74.7 * Time)))
decay <- decay %>%
mutate(resids = (Count - count_pred))
decay
decay %>%
mutate(log(count_pred))
yfun <- function(t){
count = 602.8 - (74.7 * t)
}
decay <- read.csv("ex02-080decay.csv")
for(x in decay$Time){
print(yfun(x))
}
decay <- decay %>%
mutate(count_pred = (602.8 - (74.7 * Time)))
mutate(log_count_pred = log(count_pred))
decay <- decay %>%
mutate(count_pred = (602.8 - (74.7 * Time)))
decay <- decay %>%
mutate(log_count_pred = log(count_pred))
decay <- decay %>%
mutate(resids = (LogCount - log_count_pred))
decay
plot(resids, Time, data=decay)
plot(decay$resids, decay$Time)
plot(decay$resids, decay$Time)
abline(lm(resids~Time, data=decay))
plot(decay$resids, decay$Time)
abline(lm(resids~Time, data=decay))
abline(lm(resids~Time, data=decay), col="red")
plot(decay$resids, decay$Time)
abline(lm(resids~Time, data=decay), col="red")
plot(decay$resids, decay$Time)
abline(lm(decay$resids~decay$Time), col="red")
plot(decay$Time, decay$Count)
abline(lm(decay$Count~decay$Time), col="red")
plot(decay$Time, decay$Count, xlab="Time", ylab="Count")
abline(lm(decay$Count~decay$Time), col="red")
library(tidyverse)
library(skimr)
library(jsonlite)
library(scales)
library(tidymodels)
library(lubridate)
library(Hmisc)
install.package('Hmisc')
berries <- read.csv("ex02-030berries.csv")
View(berries)
berries <- read.csv("ex02-030berries.csv")
lm(Antho4~Antho3, data=berries)
df[,1:3]
berries[,1:3]
berries[,3:4]
berries <- read.csv("ex02-030berries.csv")
lm_berries <- lm(Antho4~Antho3, data=berries)
cor(berries[,4:5])
berries <- read.csv("ex02-030berries.csv")
lm_berries <- lm(Antho4~Antho3, data=berries)
cor.test(berries[,4:5])
berries <- read.csv("ex02-030berries.csv")
lm_berries <- lm(Antho4~Antho3, data=berries)
cor.test(berries$Antho4, berries$Antho3, method="pearson")
plot(berries$Antho4, berries$Antho3, xlab="Antho4", ylab="Antho3")
plot(berries$Antho4, berries$Antho3, xlab="Antho4", ylab="Antho3")
abline(lm(Antho4~Antho3, data=berries))
plot(berries$Antho4, berries$Antho3, xlab="Antho4", ylab="Antho3")
abline(lm(Antho4~Antho3, data=berries), col="red")
decay <- decay %>%
mutate(count_pred = (602.8 - (74.7 * Time)))
decay <- decay %>%
mutate(resids = (Count - count_pred))
decay
yfun <- function(t){
count = 602.8 - (74.7 * t)
}
decay <- read.csv("ex02-080decay.csv")
for(x in decay$Time){
print(yfun(x))
}
decay <- decay %>%
mutate(count_pred = (602.8 - (74.7 * Time)))
decay <- decay %>%
mutate(resids = (Count - count_pred))
decay
yfun <- function(t){
count = 602.8 - (74.7 * t)
}
decay <- read.csv("ex02-080decay.csv")
for(x in decay$Time){
print(yfun(x))
print(decay$Count- yfun(x))
}
yfun <- function(t){
count = 602.8 - (74.7 * t)
}
decay <- read.csv("ex02-080decay.csv")
for(x in decay$Time){
print(yfun(x))
print(x- yfun(x))
}
yfun <- function(t){
count = 602.8 - (74.7 * t)
}
decay <- read.csv("ex02-080decay.csv")
for(x in decay$Time){
print(yfun(x))
print(x)
}
decay <- decay %>%
mutate(count_pred = (602.8 - (74.7 * Time)))
decay <- decay %>%
mutate(resids = (Count - count_pred))
decay
plot(decay$Time, decay$Count, xlab="Time", ylab="Count")
abline(lm(decay$Count~decay$Time), col="red")
berries <- read.csv("ex02-030berries.csv")
cor.test(berries$Antho4, berries$Antho3, method="pearson")
plot(berries$Antho4, berries$Antho3, xlab="Antho4", ylab="Antho3")
abline(lm(Antho4~Antho3, data=berries), col="red")
group_1 <- simreg %>%
filter(Group == 1)
library(tidyverse)
library(skimr)
library(jsonlite)
library(scales)
library(tidymodels)
library(lubridate)
library(Hmisc)
group_1 <- simreg %>%
filter(Group == 1)
lm(Y~X, data = group_1)$coefficients
plot(group_1$X, group_1$Y, xlab="X", ylab="Y")
abline(lm(Y~X, data=group_1), col="red")
simreg <- read.csv("ex02-144simreg.csv")
simreg
group_2 <- simreg %>%
filter(Group == 2)
lm(Y~X, data = group_2)$coefficients
plot(group_2$X, group_2$Y, xlab="X", ylab="Y")
abline(lm(Y~X, data=group_2), col="red")
lm(Y~X, data = simreg)$coefficients
plot(simreg$X, simreg$Y, xlab="X", ylab="Y")
abline(lm(Y~X, data = simreg)$coefficients, col="red")
berriesm <- read.csv("ex02-148berriem.csv")
berriesm <- read.csv("ex02-148berriem.csv")
cor.test(berriesm$Antho4M, berriesm$Antho3M, method="pearson")
berriesm
View(berriesm)
berriesm <- read.csv("ex02-148berriem.csv")
cor.test(berriesm$Antho1M, berriesm$Antho2M, method="pearson")
berriesm <- read.csv("ex02-148berriem.csv")
cor.test(berriesm$Antho2M, berriesm$Antho1M, method="pearson")
plot(berries$Antho2M, berries$Antho1M, xlab="Antho4", ylab="Antho3")
plot(berriesm$Antho2M, berriesm$Antho1M, xlab="Antho4", ylab="Antho3")
abline(lm(Antho1M~Antho2M, data=berriesm), col="red")
berries <- read.csv("ex02-030berries.csv")
cor.test(berries$Antho4, berries$Antho3, method="pearson")
berries <- read.csv("ex02-009berries.csv")
plot(berries$Antho4, berries$Antho3, xlab="Antho4", ylab="Antho3")
plot(berries$Antho4, berries$Antho3, xlab="Antho4", ylab="Antho3")
abline(lm(Antho4~Antho3, data=berries), col='red')
smoothScatter(berries$Antho4~berries$Antho3)
smoothScatter(berries$Antho3~berries$Antho4)
?smoothScatter
View(berriesm)
lm(Antho4~Antho3, data=berries)$coefficents
lm(Antho4~Antho3, data=berries)
berrier <- read.csv('ex02-149berrier.csv')
berrier <- read.csv('ex02-149berrier.csv')
plot(berrier$Antho2, berrier$Antho1, xlab='Antho4', ylab='Antho3')
berrier <- read.csv('ex02-149berrier.csv')
plot(berrier$Antho2, berrier$Antho1, xlab='Antho4', ylab='Antho3')
abline(lm(Antho2~Antho1, data=berrier), col='red')
cor.test(berrier$Antho1, berrier$Antho2, method="pearson")
lm(Antho2~Antho1, data=berrier)
knit_with_parameters("C:/Users/drebi/OneDrive - stevens.edu/Courses/FA541/Assignments/HW6/assignment.Rmd")
library(tidyverse)
library(skimr)
library(jsonlite)
library(scales)
library(tidymodels)
library(lubridate)
library(Hmisc)
teeth <- read.csv("ex09-001teeth.csv")
teeth <- matrix(c(68, 58884, 647, 77992, 1114,
55597, 1783, 43994, 2887,
47569, 3801, 39985),
ncol=6, byrow = FALSE)
rownames(teeth) <- c("Yes", "No")
colnames(teeth) <- c("15-20", "20-25", "25-30", "30-35", "35-40", "40-60")
teeth.table <- as.table(teeth)
teeth.table
prop.table(teeth)
margin.table(teeth, 1)/margin.table(teeth) # marginal distribution for Rejected
margin.table(teeth, 2) /margin.table(teeth)# marginal distribution for Age
prop.table(teeth, margin=2)
haras <- matrix(c(732, 671, 106, 140, 125, 192), ncol=2, byrow = TRUE)
rownames(haras) <- c("More", "Never", "Once")
colnames(haras) <- c("Boys", "Girls")
haras.table <- as.table(haras)
haras.table
prop.table(haras)
margin.table(haras, 1)/margin.table(haras)
margin.table(haras, 2)/margin.table(haras)
prop.table(haras, 1)
prop.table(haras, 2)
pnorm(-0.6,mean=0, sd=1)
pnorm(-0.1,mean=0, sd=1)-pnorm(-0.6,mean=0, sd=1)
pnorm(0.1,mean=0, sd=1)-pnorm(-0.1,mean=0, sd=1)
pnorm(0.6,mean=0, sd=1)-pnorm(0.1,mean=0, sd=1)
1-pnorm(0.6,mean=0, sd=1)
1-pchisq(4.1638,df=4)
men <- matrix(c(111, 61, 150, 22, 419, 85), ncol=2, byrow = TRUE)
rownames(men) <- c("Highest", "Middle", "Lowest")
colnames(men) <- c("Died", "Survived")
men.table <- as.table(men)
men.table
women <- matrix(c(6, 126, 13, 90, 107, 101), ncol=2, byrow = TRUE)
rownames(women) <- c("Highest", "Middle", "Lowest")
colnames(women) <- c("Died", "Survived")
women.table <- as.table(women)
women.table
men[, "Died"]/ 680
women[, "Died"]/ 126
1-pchisq(103.7665, 3)
1-pchisq(34.6206, 3)
simreg <- read.csv("ex02-144simreg.csv")
group_1 <- simreg %>%
filter(Group == 1)
lm(Y~X, data = group_1)$coefficients
plot(group_1$X, group_1$Y, xlab="X", ylab="Y")
abline(lm(Y~X, data=group_1), col="red")
group_2 <- simreg %>%
filter(Group == 2)
lm(Y~X, data = group_2)$coefficients
plot(group_2$X, group_2$Y, xlab="X", ylab="Y")
abline(lm(Y~X, data=group_2), col="red")
lm(Y~X, data = simreg)$coefficients
plot(simreg$X, simreg$Y, xlab="X", ylab="Y")
abline(lm(Y~X, data = simreg)$coefficients, col="red")
plot(simreg$X, simreg$Y, xlab="X", ylab="Y",
col=c('violet', 'blue')[as.numeric(simreg$Group)],
pch=c(4,1)[as.numeric(simreg$Group)])
legend("bottomright", col=c('violet', 'blue'), pch=c(4,1), legend=c('X','Y'))
abline(lm(Y~X, data=group_1), col="red")
abline(lm(Y~X, data=group_2), col="red")
abline(lm(Y~X, data = simreg)$coefficients, col="red")
DepA <- matrix(c(2, 0, 9, 1, 5, 15, 4, 16), ncol=2, byrow = TRUE)
rownames(DepA) <- c("First", "Second", "Third", "Fourth")
colnames(DepA) <- c("Large", "Small")
DepA.table <- as.table(DepA)
DepA.table["First",]/2
DepA.table["Second",]/10
DepA.table["Third",]/20
DepA.table["Fourth",]/20
DepB <- matrix(c(18, 2, 40, 10, 4, 16, 2, 14), ncol=2, byrow = TRUE)
rownames(DepB) <- c("First", "Second", "Third", "Fourth")
colnames(DepB) <- c("Large", "Small")
DepB.table <- as.table(DepB)
DepB.table["First",]/20
DepB.table["Second",]/50
DepB.table["Third",]/20
DepB.table["Fourth",]/16
berries <- read.csv("ex02-009berries.csv")
plot(berries$Antho4, berries$Antho3, xlab="Antho4", ylab="Antho3")
plot(berries$Antho4, berries$Antho3, xlab="Antho4", ylab="Antho3")
abline(lm(Antho4~Antho3, data=berries), col='red')
smoothScatter(berries$Antho3~berries$Antho4)
berries <- read.csv("ex02-030berries.csv")
cor.test(berries$Antho4, berries$Antho3, method="pearson")
plot(berries$Antho4, berries$Antho3, xlab="Antho4", ylab="Antho3")
abline(lm(Antho4~Antho3, data=berries), col="red")
berriesm <- read.csv("ex02-148berriem.csv")
cor.test(berriesm$Antho2M, berriesm$Antho1M, method="pearson")
plot(berriesm$Antho2M, berriesm$Antho1M, xlab="Antho4", ylab="Antho3")
abline(lm(Antho1M~Antho2M, data=berriesm), col="red")
lm(Antho4~Antho3, data=berries)
berrier <- read.csv('ex02-149berrier.csv')
plot(berrier$Antho2, berrier$Antho1, xlab='Antho4', ylab='Antho3')
abline(lm(Antho2~Antho1, data=berrier), col='red')
cor.test(berrier$Antho1, berrier$Antho2, method="pearson")
lm(Antho2~Antho1, data=berrier)
raises <- read.csv("ex02-135raises.csv")
raise_sal <- lm(Salary ~ Year, data = raises)
summary(raise_sal)
log_salary <- log(raises$Salary*1000, 10)
raises_log <- lm(log_salary ~ raises$Year)
summary(raises_log)
x=seq(700,1600,by=1)
y=pnorm(x, 1129,125)
plot(x,y)
plot(x,y,type="l")
plot(x,y,type="l", main="Normal Distribution CDF", xlab="Values", ylab="CDF")
x=seq(700,1600,by=1)
y=pnorm(x, 1129,125)
plot(x,y)
type1 <- subset(poets,Type == "Nonfiction")
poets <- read.csv("ex12-060poets.csv")
## Numerical Method to Describe Dataset
poets %>% group_by(Type) %>%
summarise(Mean_Age = mean(Age))
poets <- read.csv("ex12-060poets.csv")
## Numerical Method to Describe Dataset
poets %>% group_by(Type) %>%
summarise(Mean_Age = mean(Age))
library(tidyverse)
library(skimr)
library(jsonlite)
library(scales)
library(tidymodels)
library(lubridate)
library(Hmisc)
poets <- read.csv("ex12-060poets.csv")
## Numerical Method to Describe Dataset
poets %>% group_by(Type) %>%
summarise(Mean_Age = mean(Age))
poets
setwd("C:/Users/drebi/dev/FA541Project")
library(tidyverse)
library(skimr)
library(jsonlite)
library(scales)
library(tidymodels)
library(lubridate)
library(Hmisc)
room_type <- read.csv("room_type_price.csv")
room_type <- read.csv("data/room_type_price.csv")
room_type
rooms <- read.csv("data/room_type_price.csv")
room %>% group_by(room_type) %>%
summaries(Mean_price = mean(price))
rooms <- read.csv("data/room_type_price.csv")
room %>% group_by(room_type) %>%
summarise(Mean_price = mean(price))
rooms <- read.csv("data/room_type_price.csv")
rooms %>% group_by(room_type) %>%
summarise(Mean_price = mean(price))
typeof(rooms)
lapply(rooms, function(x) x[!is.na])
lapply(rooms, function(x) x[!is.na(x)])
rooms <- read.csv("data/room_type_price.csv")
rooms <- lapply(rooms, function(x) x[!is.na(x)])
rooms %>% group_by(room_type) %>%
summarise(Mean_price = mean(price))
rooms
rooms <- read.csv("data/room_type_price.csv")
rooms %>% group_by(room_type) %>%
drop_na() %>%
summarise(Mean_price = mean(price))
hotel <- subset(rooms, room_type=="Hotel room")
hotel <- subset(rooms, room_type=="Hotel room")
shapiro.test(hotel$price)
entire <- subset(rooms, room_type=="Entire home/apt")
shapiro.test(entire$price)
entire
rooms <- rooms %>%
drop_na()
hotel <- subset(rooms, room_type=="Hotel room")
shapiro.test(hotel$price)
entire <- subset(rooms, room_type=="Entire home/apt")
shapiro.test(entire$price)
rooms %>%
drop_na()
room_type
rooms
entire <- subset(rooms, room_type=="Entire home/apt")
entire
entire <- subset(rooms, room_type=="Entire home/apt")
entire$price
entire <- subset(rooms, room_type=="Entire home/apt")
shapiro.test(entire$price)
entire <- subset(rooms, room_type=="Entire home/apt")
shapiro.test(entire[0:5000]$price)
entire <- subset(rooms, room_type=="Entire home/apt")
shapiro.test(entire[0:5000])$price
entire <- subset(rooms, room_type=="Entire home/apt")
shapiro.test(entire$price[0:5000])
lm.model <- lm(price ~ room_type, data = rooms)
summary(lm.model)
anova(lm.model)
lm.av <- aov(lm.model)
tukey.test <- TukeyHSD(lm.av)
plot(tukey.test)
tukey.test
